using Microsoft.VisualStudio.TestTools.UnitTesting;
using OldMusicBox.ePUAP.Client.Model.GetSignedDocument;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace OldMusicBox.ePUAP.Tests
{
    [TestClass]
    public class TpSigning5Tests
    {
        [TestMethod]
        public void GetSignedDocument5Response_ProfilZaufany()
        {
            // arrange

            var response = new GetSignedDocument5Response();
            response.Content =
                "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pg0KPFRlc3REb2N1bWVudCAgeG1sbnM6eHNkPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSINCiAgICAgICAgICAgICAgICAgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSI+DQoJPGRzOlNpZ25hdHVyZSB4bWxuczpkcz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnIyINCgkgICAgICAgICAgICAgIElkPSJTaWduYXR1cmUtOWMxN2IyMWItZGQ2MS00OGYzLWFkNTMtMWJlYWI5YWE1OWM0Ij4NCgkJPGRzOlNpZ25lZEluZm8+DQoJCQk8ZHM6Q2Fub25pY2FsaXphdGlvbk1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyIvPg0KCQkJPGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz4NCgkJCTxkczpSZWZlcmVuY2UgVVJJPSIiPg0KCQkJCTxkczpUcmFuc2Zvcm1zPg0KCQkJCQk8ZHM6VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvVFIvMTk5OS9SRUMteHBhdGgtMTk5OTExMTYiPg0KCQkJCQkJPGRzOlhQYXRoIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj5ub3QoYW5jZXN0b3Itb3Itc2VsZjo6ZHM6U2lnbmF0dXJlKTwvZHM6WFBhdGg+DQoJCQkJCTwvZHM6VHJhbnNmb3JtPg0KCQkJCTwvZHM6VHJhbnNmb3Jtcz4NCgkJCQk8ZHM6RGlnZXN0TWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8wNC94bWxlbmMjc2hhMjU2Ii8+DQoJCQkJPGRzOkRpZ2VzdFZhbHVlPnQ9PC9kczpEaWdlc3RWYWx1ZT4NCgkJCTwvZHM6UmVmZXJlbmNlPg0KCQkJPGRzOlJlZmVyZW5jZSBUeXBlPSJodHRwOi8vdXJpLmV0c2kub3JnLzAxOTAzI1NpZ25lZFByb3BlcnRpZXMiDQoJCQkgICAgICAgICAgICAgIFVSST0iI1NpZ25lZFByb3BzLTljMTdiMjFiLWRkNjEtNDhmMy1hZDUzLTFiZWFiOWFhNTljNCI+DQoJCQkJPGRzOlRyYW5zZm9ybXM+DQoJCQkJCTxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4NCgkJCQk8L2RzOlRyYW5zZm9ybXM+DQoJCQkJPGRzOkRpZ2VzdE1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZW5jI3NoYTI1NiIvPg0KCQkJCTxkczpEaWdlc3RWYWx1ZT5OPTwvZHM6RGlnZXN0VmFsdWU+DQoJCQk8L2RzOlJlZmVyZW5jZT4NCgkJPC9kczpTaWduZWRJbmZvPg0KCQk8ZHM6U2lnbmF0dXJlVmFsdWUgSWQ9IlNpZ25hdHVyZVZhbHVlLTljMTdiMjFiLWRkNjEtNDhmMy1hZDUzLTFiZWFiOWFhNTljNCI+WD08L2RzOlNpZ25hdHVyZVZhbHVlPg0KCQk8ZHM6S2V5SW5mbz4NCgkJCTxkczpYNTA5RGF0YT4NCgkJCQk8ZHM6WDUwOUNlcnRpZmljYXRlPk09PC9kczpYNTA5Q2VydGlmaWNhdGU+DQoJCQk8L2RzOlg1MDlEYXRhPg0KCQk8L2RzOktleUluZm8+DQoJCTxkczpPYmplY3QgSWQ9IlF1YWxpZnlpbmdJbmZvcy05YzE3YjIxYi1kZDYxLTQ4ZjMtYWQ1My0xYmVhYjlhYTU5YzQiPg0KCQkJPHhhZGVzOlF1YWxpZnlpbmdQcm9wZXJ0aWVzIHhtbG5zOnhhZGVzPSJodHRwOi8vdXJpLmV0c2kub3JnLzAxOTAzL3YxLjMuMiMiDQoJCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgSWQ9IlF1YWxpZnlpbmdQcm9wcy05YzE3YjIxYi1kZDYxLTQ4ZjMtYWQ1My0xYmVhYjlhYTU5YzQiDQoJCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgVGFyZ2V0PSIjU2lnbmF0dXJlLTljMTdiMjFiLWRkNjEtNDhmMy1hZDUzLTFiZWFiOWFhNTljNCI+DQoJCQkJPHhhZGVzOlNpZ25lZFByb3BlcnRpZXMgSWQ9IlNpZ25lZFByb3BzLTljMTdiMjFiLWRkNjEtNDhmMy1hZDUzLTFiZWFiOWFhNTljNCI+DQoJCQkJCTx4YWRlczpTaWduZWRTaWduYXR1cmVQcm9wZXJ0aWVzPg0KCQkJCQkJPHhhZGVzOlNpZ25pbmdUaW1lPjIwMjQtMDMtMDRUMTI6NDI6MzkuOTQzKzAxOjAwPC94YWRlczpTaWduaW5nVGltZT4NCgkJCQkJCTx4YWRlczpTaWduaW5nQ2VydGlmaWNhdGU+DQoJCQkJCQkJPHhhZGVzOkNlcnQ+DQoJCQkJCQkJCTx4YWRlczpDZXJ0RGlnZXN0Pg0KCQkJCQkJCQkJPGRzOkRpZ2VzdE1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZW5jI3NoYTI1NiIvPg0KCQkJCQkJCQkJPGRzOkRpZ2VzdFZhbHVlPk49PC9kczpEaWdlc3RWYWx1ZT4NCgkJCQkJCQkJPC94YWRlczpDZXJ0RGlnZXN0Pg0KCQkJCQkJCQk8eGFkZXM6SXNzdWVyU2VyaWFsPg0KCQkJCQkJCQkJPGRzOlg1MDlJc3N1ZXJOYW1lPkNOPUNQSSBDQSBmb3IgZXB1YXAgVEVTVDIsT1U9Q1BJIENBIGZvciBlcHVhcCBURVNUMixPPUNQSSxDPVBMPC9kczpYNTA5SXNzdWVyTmFtZT4NCgkJCQkJCQkJCTxkczpYNTA5U2VyaWFsTnVtYmVyPjE1ODEyNjEwODA8L2RzOlg1MDlTZXJpYWxOdW1iZXI+DQoJCQkJCQkJCTwveGFkZXM6SXNzdWVyU2VyaWFsPg0KCQkJCQkJCTwveGFkZXM6Q2VydD4NCgkJCQkJCTwveGFkZXM6U2lnbmluZ0NlcnRpZmljYXRlPg0KCQkJCQkJPHhhZGVzOlNpZ25hdHVyZVBvbGljeUlkZW50aWZpZXI+DQoJCQkJCQkJPHhhZGVzOlNpZ25hdHVyZVBvbGljeUltcGxpZWQvPg0KCQkJCQkJPC94YWRlczpTaWduYXR1cmVQb2xpY3lJZGVudGlmaWVyPg0KCQkJCQkJPHhhZGVzOlNpZ25lclJvbGU+DQoJCQkJCQkJPHhhZGVzOkNsYWltZWRSb2xlcz4NCgkJCQkJCQkJPHhhZGVzOkNsYWltZWRSb2xlPg0KCQkJCQkJCQkJPHB6OkVQU2lnbmF0dXJlIHhtbG5zOnB6PSJodHRwOi8vY3JkLmdvdi5wbC94bWwvc2NoZW1hdHkvcG9kcGlzX3phdWZhbnkvIg0KCQkJCQkJCQkJICAgICAgICAgICAgICAgIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIg0KCQkJCQkJCQkJICAgICAgICAgICAgICAgIHhtbG5zOnhhZGVzPSJodHRwOi8vdXJpLmV0c2kub3JnLzAxOTAzL3YxLjMuMiMiPg0KCQkJCQkJCQkJCTxwejpOYXR1cmFsUGVyc29uPg0KCQkJCQkJCQkJCQk8cHo6Q3VycmVudEZhbWlseU5hbWU+VEVTVE9XWTwvcHo6Q3VycmVudEZhbWlseU5hbWU+DQoJCQkJCQkJCQkJCTxwejpGaXJzdE5hbWU+WkVORUs8L3B6OkZpcnN0TmFtZT4NCgkJCQkJCQkJCQkJPHB6OkRhdGVPZkJpcnRoPjE5OTktMDEtMDE8L3B6OkRhdGVPZkJpcnRoPg0KCQkJCQkJCQkJCQk8cHo6UGVyc29uYWxJZGVudGlmaWVyPjEyMzQ1MTIzNDUxMjwvcHo6UGVyc29uYWxJZGVudGlmaWVyPg0KCQkJCQkJCQkJCTwvcHo6TmF0dXJhbFBlcnNvbj4NCgkJCQkJCQkJCQk8cHo6U2lnbmF0dXJlRGF0YT4NCgkJCQkJCQkJCQkJPHB6OklkZW50aXR5SXNzdWVyPmludC5sb2dpbi5nb3YucGw8L3B6OklkZW50aXR5SXNzdWVyPg0KCQkJCQkJCQkJCQk8cHo6SWRlbnRpdHlJc3N1ZVRpbWVzdGFtcD4yMDI0LTAzLTA0VDEyOjQyOjM5Ljk0MyswMTowMDwvcHo6SWRlbnRpdHlJc3N1ZVRpbWVzdGFtcD4NCgkJCQkJCQkJCQk8L3B6OlNpZ25hdHVyZURhdGE+DQoJCQkJCQkJCQk8L3B6OkVQU2lnbmF0dXJlPg0KCQkJCQkJCQk8L3hhZGVzOkNsYWltZWRSb2xlPg0KCQkJCQkJCTwveGFkZXM6Q2xhaW1lZFJvbGVzPg0KCQkJCQkJPC94YWRlczpTaWduZXJSb2xlPg0KCQkJCQk8L3hhZGVzOlNpZ25lZFNpZ25hdHVyZVByb3BlcnRpZXM+DQoJCQkJPC94YWRlczpTaWduZWRQcm9wZXJ0aWVzPg0KCQkJPC94YWRlczpRdWFsaWZ5aW5nUHJvcGVydGllcz4NCgkJPC9kczpPYmplY3Q+DQoJPC9kczpTaWduYXR1cmU+DQo8L1Rlc3REb2N1bWVudD4=";

            var signature = response.Signature;

            Assert.IsNotNull( signature );
            Assert.IsTrue( signature.IsValid );
        }

        [TestMethod]
        public void GetSignedDocument5Response_PodpisKwalifikowany()
        {
            // arrange

            var response = new GetSignedDocument5Response();
            response.Content =
                "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pg0KPFRlc3REb2N1bWVudCB4bWxuczp4c2Q9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hIg0KICAgICAgICAgICAgICB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4NCgk8ZHM6U2lnbmF0dXJlIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIg0KCSAgICAgICAgICAgICAgSWQ9ImlkLTA0MWE4YTZhMjRkYWQyMzRiN2M5ZjM4NTEwNTIzZDU1Ij4NCgkJPGRzOlNpZ25lZEluZm8+DQoJCQk8ZHM6Q2Fub25pY2FsaXphdGlvbk1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyIvPg0KCQkJPGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz4NCgkJCTxkczpSZWZlcmVuY2UgSWQ9IklELWU5YWJjMjhkZDBmMTRmYjYwZDIwODJjZjM3OThkNDMzIg0KCQkJICAgICAgICAgICAgICBVUkk9IiI+DQoJCQkJPGRzOlRyYW5zZm9ybXM+DQoJCQkJCTxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy9UUi8xOTk5L1JFQy14cGF0aC0xOTk5MTExNiI+DQoJCQkJCQk8ZHM6WFBhdGg+bm90KGFuY2VzdG9yLW9yLXNlbGY6OmRzOlNpZ25hdHVyZSk8L2RzOlhQYXRoPg0KCQkJCQk8L2RzOlRyYW5zZm9ybT4NCgkJCQk8L2RzOlRyYW5zZm9ybXM+DQoJCQkJPGRzOkRpZ2VzdE1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZW5jI3NoYTI1NiIvPg0KCQkJCTxkczpEaWdlc3RWYWx1ZT50PTwvZHM6RGlnZXN0VmFsdWU+DQoJCQk8L2RzOlJlZmVyZW5jZT4NCgkJCTxkczpSZWZlcmVuY2UgVHlwZT0iaHR0cDovL3VyaS5ldHNpLm9yZy8wMTkwMyNTaWduZWRQcm9wZXJ0aWVzIg0KCQkJICAgICAgICAgICAgICBVUkk9IiN4YWRlcy1pZC0wNDFhOGE2YTI0ZGFkMjM0YjdjOWYzODUxMDUyM2Q1NSI+DQoJCQkJPGRzOlRyYW5zZm9ybXM+DQoJCQkJCTxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4NCgkJCQk8L2RzOlRyYW5zZm9ybXM+DQoJCQkJPGRzOkRpZ2VzdE1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZW5jI3NoYTI1NiIvPg0KCQkJCTxkczpEaWdlc3RWYWx1ZT53PTwvZHM6RGlnZXN0VmFsdWU+DQoJCQk8L2RzOlJlZmVyZW5jZT4NCgkJPC9kczpTaWduZWRJbmZvPg0KCQk8ZHM6U2lnbmF0dXJlVmFsdWUgSWQ9InZhbHVlLWlkLTA0MWE4YTZhMjRkYWQyMzRiN2M5ZjM4NTEwNTIzZDU1Ij5GPT08L2RzOlNpZ25hdHVyZVZhbHVlPg0KCQk8ZHM6S2V5SW5mbz4NCgkJCTxkczpYNTA5RGF0YT4NCgkJCQk8ZHM6WDUwOUNlcnRpZmljYXRlPmZvbzwvZHM6WDUwOUNlcnRpZmljYXRlPg0KCQkJCTxkczpYNTA5Q2VydGlmaWNhdGU+YmFyPC9kczpYNTA5Q2VydGlmaWNhdGU+DQoJCQkJPGRzOlg1MDlDZXJ0aWZpY2F0ZT5xdXg8L2RzOlg1MDlDZXJ0aWZpY2F0ZT4NCgkJCTwvZHM6WDUwOURhdGE+DQoJCTwvZHM6S2V5SW5mbz4NCgkJPGRzOk9iamVjdD4NCgkJCTx4YWRlczpRdWFsaWZ5aW5nUHJvcGVydGllcyB4bWxuczp4YWRlcz0iaHR0cDovL3VyaS5ldHNpLm9yZy8wMTkwMy92MS4zLjIjIg0KCQkJICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRhcmdldD0iI2lkLTA0MWE4YTZhMjRkYWQyMzRiN2M5ZjM4NTEwNTIzZDU1Ij4NCgkJCQk8eGFkZXM6U2lnbmVkUHJvcGVydGllcyBJZD0ieGFkZXMtaWQtMDQxYThhNmEyNGRhZDIzNGI3YzlmMzg1MTA1MjNkNTUiPg0KCQkJCQk8eGFkZXM6U2lnbmVkU2lnbmF0dXJlUHJvcGVydGllcz4NCgkJCQkJCTx4YWRlczpTaWduaW5nVGltZT4yMDI0LTAzLTA0VDExOjQ1OjQxWjwveGFkZXM6U2lnbmluZ1RpbWU+DQoJCQkJCQk8eGFkZXM6U2lnbmluZ0NlcnRpZmljYXRlPg0KCQkJCQkJCTx4YWRlczpDZXJ0Pg0KCQkJCQkJCQk8eGFkZXM6Q2VydERpZ2VzdD4NCgkJCQkJCQkJCTxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz4NCgkJCQkJCQkJCTxkczpEaWdlc3RWYWx1ZT5YUlpFcUI3YVZyREhzK0l5MTFyWlNCZnowR01RTy9TcSsvMXZaMXdLeXFnPTwvZHM6RGlnZXN0VmFsdWU+DQoJCQkJCQkJCTwveGFkZXM6Q2VydERpZ2VzdD4NCgkJCQkJCQkJPHhhZGVzOklzc3VlclNlcmlhbD4NCgkJCQkJCQkJCTxkczpYNTA5SXNzdWVyTmFtZT5hbGFtYWtvdGE8L2RzOlg1MDlJc3N1ZXJOYW1lPg0KCQkJCQkJCQkJPGRzOlg1MDlTZXJpYWxOdW1iZXI+cmF6IGR3YSB0cnp5PC9kczpYNTA5U2VyaWFsTnVtYmVyPg0KCQkJCQkJCQk8L3hhZGVzOklzc3VlclNlcmlhbD4NCgkJCQkJCQk8L3hhZGVzOkNlcnQ+DQoJCQkJCQk8L3hhZGVzOlNpZ25pbmdDZXJ0aWZpY2F0ZT4NCgkJCQkJPC94YWRlczpTaWduZWRTaWduYXR1cmVQcm9wZXJ0aWVzPg0KCQkJCQk8eGFkZXM6U2lnbmVkRGF0YU9iamVjdFByb3BlcnRpZXM+DQoJCQkJCQk8eGFkZXM6RGF0YU9iamVjdEZvcm1hdCBPYmplY3RSZWZlcmVuY2U9IiNJRC1lOWFiYzI4ZGQwZjE0ZmI2MGQyMDgyY2YzNzk4ZDQzMyI+DQoJCQkJCQkJPHhhZGVzOk1pbWVUeXBlPnRleHQveG1sPC94YWRlczpNaW1lVHlwZT4NCgkJCQkJCTwveGFkZXM6RGF0YU9iamVjdEZvcm1hdD4NCgkJCQkJCTx4YWRlczpDb21taXRtZW50VHlwZUluZGljYXRpb24+DQoJCQkJCQkJPHhhZGVzOkNvbW1pdG1lbnRUeXBlSWQ+DQoJCQkJCQkJCTx4YWRlczpJZGVudGlmaWVyPmh0dHA6Ly91cmkuZXRzaS5vcmcvMDE5MDMvdjEuMi4yI1Byb29mT2ZBcHByb3ZhbDwveGFkZXM6SWRlbnRpZmllcj4NCgkJCQkJCQk8L3hhZGVzOkNvbW1pdG1lbnRUeXBlSWQ+DQoJCQkJCQkJPHhhZGVzOkFsbFNpZ25lZERhdGFPYmplY3RzLz4NCgkJCQkJCTwveGFkZXM6Q29tbWl0bWVudFR5cGVJbmRpY2F0aW9uPg0KCQkJCQk8L3hhZGVzOlNpZ25lZERhdGFPYmplY3RQcm9wZXJ0aWVzPg0KCQkJCTwveGFkZXM6U2lnbmVkUHJvcGVydGllcz4NCgkJCTwveGFkZXM6UXVhbGlmeWluZ1Byb3BlcnRpZXM+DQoJCTwvZHM6T2JqZWN0Pg0KCTwvZHM6U2lnbmF0dXJlPg0KPC9UZXN0RG9jdW1lbnQ+";

            Assert.IsNull( response.Signature );
            Assert.IsNotNull( response.SigningCertificates );

            Assert.AreEqual( 3, response.SigningCertificates.Count() );
            CollectionAssert.AllItemsAreNotNull( response.SigningCertificates.ToList() );
            Assert.AreEqual( "foo", response.SigningCertificates.FirstOrDefault() );
        }
    }
}
